{"version":3,"sources":["api.ts","components/useExchange.ts","components/Chart.tsx","components/Exchanger.tsx","components/Logo.tsx","App.tsx","index.tsx"],"names":["api","fromCurrency","toCurrency","startDate","todayDate","a","url","fetch","res","json","useExchange","exchangedAmount","useState","inputOne","setinputOne","inputTwo","setinputTwo","currencyOne","setCurrencyOne","currencyTwo","setCurrencyTwo","rate","setRate","date","setDate","processedData","setprocessedData","inputOneChanged","setInputOneChanged","Date","now","toISOString","replace","split","join","setStartDate","processData","data","sortedArrOfObj","Object","entries","map","sort","b","x","y","length","rates","useEffect","getRates","parseFloat","toFixed","resultField","resultFieldDisplay","resultFieldDate","toLocaleDateString","day","month","year","displayFieldPadding","paddingTop","inputOneValue","undefined","inputTwoValue","ratesHistoryStartDate","ratesHistoryEndDate","currencyOneChange","e","currentTarget","value","currencyTwoChange","inputOneChange","Number","inputTwoChange","handleStartDate","event","target","disabledOptionSelectOne","props","disabledOptionSelectTwo","Chart","SimpleAreaChart","ResponsiveContainer","width","height","AreaChart","margin","left","right","top","bottom","CartesianGrid","vertical","XAxis","dataKey","style","fontSize","interval","YAxis","type","domain","Tooltip","separator","labelStyle","contentStyle","itemStyle","color","cursor","Area","stroke","fill","fillOpacity","Exchanger","exchangedValues","className","name","onChange","placeholder","autoFocus","disabled","href","onClick","Logo","src","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb54bbc5.chunk.js","sourcesContent":["export type Currency = \"USD\" | \"EUR\" | \"PLN\";\r\n\r\nexport type Rates = Record<Currency, number>;\r\n\r\ninterface ApiResponse {\r\n  base: Currency;\r\n  date: string;\r\n  rates: Record<string, Rates>;\r\n}\r\n\r\nexport async function api(\r\n  fromCurrency: Currency,\r\n  toCurrency: Currency,\r\n  startDate: string,\r\n  todayDate: string\r\n): Promise<ApiResponse> {\r\n  const url = `https://api.exchangeratesapi.io/history?start_at=${startDate}&end_at=${todayDate}&base=${fromCurrency}&symbols=${toCurrency}`;\r\n  const res = await fetch(url);\r\n  return res.json();\r\n}\r\n","//custom hook\r\nimport { useEffect, useState } from \"react\";\r\nimport { api, Currency } from \"../api\";\r\n\r\nexport function useExchange() {\r\n  const [inputOne, setinputOne] = useState<number | null>(null);\r\n  const [inputTwo, setinputTwo] = useState<number | null>(null);\r\n  const [currencyOne, setCurrencyOne] = useState<Currency>(\"EUR\");\r\n  const [currencyTwo, setCurrencyTwo] = useState<Currency>(\"USD\");\r\n  const [rate, setRate] = useState<number>(1);\r\n  const [date, setDate] = useState<string>(\"\");\r\n  const [processedData, setprocessedData] = useState<ProcessData[]>([]);\r\n  const [inputOneChanged, setInputOneChanged] = useState<Boolean>(false);\r\n  const [startDate, setStartDate] = useState<string>(\r\n    new Date(Date.now() - 604800000)\r\n      .toISOString()\r\n      .replace(/T.*/, \"\")\r\n      .split(\"-\")\r\n      .join(\"-\")\r\n  );\r\n  const todayDate: string = new Date()\r\n    .toISOString()\r\n    .replace(/T.*/, \"\")\r\n    .split(\"-\")\r\n    .join(\"-\");\r\n\r\n  function handleStartDate(event: React.MouseEvent<HTMLElement>): void {\r\n    const buttonVal = (event.target as HTMLInputElement).value;\r\n    switch (buttonVal) {\r\n      case \"week\":\r\n        setStartDate(\r\n          new Date(Date.now() - 604800000)\r\n            .toISOString()\r\n            .replace(/T.*/, \"\")\r\n            .split(\"-\")\r\n            .join(\"-\")\r\n        );\r\n        break;\r\n      case \"month\":\r\n        setStartDate(\r\n          new Date(Date.now() - 2629800000)\r\n            .toISOString()\r\n            .replace(/T.*/, \"\")\r\n            .split(\"-\")\r\n            .join(\"-\")\r\n        );\r\n        break;\r\n      case \"year\":\r\n        setStartDate(\r\n          new Date(Date.now() - 31557600000)\r\n            .toISOString()\r\n            .replace(/T.*/, \"\")\r\n            .split(\"-\")\r\n            .join(\"-\")\r\n        );\r\n        break;\r\n    }\r\n  }\r\n\r\n  interface ProcessData {\r\n    date: string;\r\n    rate: number;\r\n  }\r\n\r\n  useEffect(() => {\r\n    getRates();\r\n  }, [currencyOne, currencyTwo, startDate]);\r\n\r\n  function inputOneChange(e: React.FormEvent<HTMLInputElement>) {\r\n    setinputOne(Number(e.currentTarget.value));\r\n    setInputOneChanged(true);\r\n  }\r\n\r\n  function inputTwoChange(e: React.FormEvent<HTMLInputElement>) {\r\n    setinputTwo(Number(e.currentTarget.value));\r\n    setInputOneChanged(false);\r\n  }\r\n\r\n  function currencyOneChange(e: React.FormEvent<HTMLSelectElement>) {\r\n    setCurrencyOne(e.currentTarget.value as Currency);\r\n  }\r\n\r\n  function currencyTwoChange(e: React.FormEvent<HTMLSelectElement>) {\r\n    setCurrencyTwo(e.currentTarget.value as Currency);\r\n  }\r\n\r\n  type Rates = Record<Currency, number>;\r\n\r\n  function processData(data: Record<string, Rates>) {\r\n    const sortedArrOfObj = Object.entries(data)\r\n      .map(([key, value]) => ({\r\n        date: key,\r\n        rate: value[currencyTwo],\r\n      }))\r\n      .sort((a, b) => {\r\n        let x = a.date;\r\n        let y = b.date;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n    setRate(sortedArrOfObj[sortedArrOfObj.length - 1].rate);\r\n    setDate(sortedArrOfObj[sortedArrOfObj.length - 1].date);\r\n    setprocessedData(sortedArrOfObj);\r\n  }\r\n\r\n  async function getRates() {\r\n    const data = await api(currencyOne, currencyTwo, startDate, todayDate);\r\n    processData(data.rates); //object of objects: {\"2020-12-03\":{\"EUR\":0.2235486106},...}\r\n  }\r\n\r\n  let exchangedAmount: number | null;\r\n\r\n  if (inputOneChanged) {\r\n    exchangedAmount =\r\n      inputOne !== null ? parseFloat((inputOne * rate).toFixed(4)) : null;\r\n  } else {\r\n    exchangedAmount =\r\n      inputTwo !== null ? parseFloat((inputTwo / rate).toFixed(4)) : null;\r\n  }\r\n\r\n  const resultField: string = inputOneChanged\r\n    ? `${inputOne} ${currencyOne} equals${\" \"}\r\n${exchangedAmount}${\" \"}\r\n${currencyTwo}`\r\n    : `${exchangedAmount} ${currencyOne} equals${\" \"}\r\n${inputTwo}${\" \"}\r\n${currencyTwo}`;\r\n\r\n  const resultFieldDisplay =\r\n    inputOne !== null || inputTwo !== null\r\n      ? resultField\r\n      : `Fill the inputs to exchange`;\r\n\r\n  const resultFieldDate: string = new Date(date).toLocaleDateString(\"en-GB\", {\r\n    day: \"2-digit\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n  });\r\n\r\n  const displayFieldPadding =\r\n    inputOne !== null ? { paddingTop: 0 } : { paddingTop: 41.6 };\r\n\r\n  const inputOneValue = inputOneChanged\r\n    ? inputOne || undefined\r\n    : exchangedAmount || undefined;\r\n\r\n  const inputTwoValue = !inputOneChanged\r\n    ? inputTwo || undefined\r\n    : exchangedAmount || undefined;\r\n\r\n  const ratesHistoryStartDate = new Date(startDate).toLocaleDateString(\r\n    \"en-GB\",\r\n    {\r\n      day: \"2-digit\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    }\r\n  );\r\n\r\n  const ratesHistoryEndDate = new Date(date).toLocaleDateString(\"en-GB\", {\r\n    day: \"2-digit\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n  });\r\n\r\n  function disabledOptionSelectOne(props: string) {\r\n    return currencyTwo === props ? true : false;\r\n  }\r\n\r\n  function disabledOptionSelectTwo(props: string) {\r\n    return currencyOne === props ? true : false;\r\n  }\r\n\r\n  return {\r\n    currencyOneChange,\r\n    currencyTwoChange,\r\n    inputOne,\r\n    inputTwo,\r\n    currencyOne,\r\n    currencyTwo,\r\n    exchangedAmount,\r\n    inputOneChange,\r\n    inputTwoChange,\r\n    date,\r\n    inputOneChanged,\r\n    processedData,\r\n    processData,\r\n    handleStartDate,\r\n    startDate,\r\n    resultField,\r\n    resultFieldDisplay,\r\n    resultFieldDate,\r\n    displayFieldPadding,\r\n    inputOneValue,\r\n    inputTwoValue,\r\n    ratesHistoryStartDate,\r\n    ratesHistoryEndDate,\r\n    disabledOptionSelectOne,\r\n    disabledOptionSelectTwo,\r\n  };\r\n}\r\n","import { stringify } from \"postcss\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nexport default function Chart(props: any) {\r\n  const SimpleAreaChart = (\r\n    <ResponsiveContainer width=\"100%\" height={150}>\r\n      <AreaChart\r\n        width={330}\r\n        height={150}\r\n        data={props.data}\r\n        margin={{ left: -20, right: 5, top: 5, bottom: 0 }}\r\n      >\r\n        <CartesianGrid vertical={false} />\r\n        <XAxis\r\n          dataKey=\"date\"\r\n          style={{ fontSize: 12 }}\r\n          interval={\"preserveEnd\"}\r\n        />\r\n        <YAxis\r\n          type=\"number\"\r\n          domain={[\"auto\", \"auto\"]}\r\n          style={{ fontSize: 12 }}\r\n        />\r\n        <Tooltip\r\n          separator={\": \"}\r\n          labelStyle={{ fontSize: 12 }}\r\n          contentStyle={{ fontSize: 12 }}\r\n          itemStyle={{ color: \"black\" }}\r\n          cursor={true}\r\n        />\r\n        <Area\r\n          type=\"linear\"\r\n          dataKey=\"rate\"\r\n          stroke=\"000000\"\r\n          fill=\"#000000\"\r\n          fillOpacity=\"80%\"\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n\r\n  return <div>{SimpleAreaChart}</div>;\r\n}\r\n","import { useExchange } from \"./useExchange\";\r\nimport Chart from \"./Chart\";\r\nimport \"../index.css\";\r\n\r\nexport default function Exchanger() {\r\n  const exchangedValues = useExchange();\r\n\r\n  return (\r\n    <div className=\"mx-auto inline-flex flex-wrap w-full\">\r\n      <div className=\"w-full md:w-1/2 inline-flex\">\r\n        <div className=\"w-min mx-auto\">\r\n          <div className=\"pl-1 pt-3\">\r\n            <h3 className=\"font-semibold text-base\">\r\n              {exchangedValues.resultFieldDisplay}\r\n            </h3>\r\n            <p className=\"font-thin text-xs\">\r\n              {exchangedValues.resultFieldDate}\r\n            </p>\r\n          </div>\r\n          <form className=\"mt-2\">\r\n            <div className=\"mx-auto\">\r\n              <input\r\n                name=\"inputOne\"\r\n                type=\"number\"\r\n                value={exchangedValues.inputOneValue}\r\n                onChange={exchangedValues.inputOneChange}\r\n                placeholder=\"0\"\r\n                className=\"w-36 rounded-lg mr-2\"\r\n                autoFocus\r\n              />\r\n              <select\r\n                value={exchangedValues.currencyOne}\r\n                onChange={exchangedValues.currencyOneChange}\r\n                className=\"w-36 rounded-lg\"\r\n              >\r\n                <option\r\n                  value=\"EUR\"\r\n                  disabled={exchangedValues.disabledOptionSelectOne(\"EUR\")}\r\n                >\r\n                  EUR\r\n                </option>\r\n                <option\r\n                  value=\"GBP\"\r\n                  disabled={exchangedValues.disabledOptionSelectOne(\"GBP\")}\r\n                >\r\n                  GBP\r\n                </option>\r\n                <option\r\n                  value=\"USD\"\r\n                  disabled={exchangedValues.disabledOptionSelectOne(\"USD\")}\r\n                >\r\n                  USD\r\n                </option>\r\n                <option\r\n                  value=\"PLN\"\r\n                  disabled={exchangedValues.disabledOptionSelectOne(\"PLN\")}\r\n                >\r\n                  PLN\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <input\r\n                name=\"inputTwo\"\r\n                type=\"number\"\r\n                value={exchangedValues.inputTwoValue}\r\n                onChange={exchangedValues.inputTwoChange}\r\n                placeholder=\"0\"\r\n                className=\"w-36 rounded-lg mr-2\"\r\n              />\r\n              <select\r\n                value={exchangedValues.currencyTwo}\r\n                onChange={exchangedValues.currencyTwoChange}\r\n                className=\"w-36 rounded-lg\"\r\n              >\r\n                <option\r\n                  value=\"USD\"\r\n                  disabled={exchangedValues.disabledOptionSelectTwo(\"USD\")}\r\n                >\r\n                  USD\r\n                </option>\r\n                <option\r\n                  value=\"PLN\"\r\n                  disabled={exchangedValues.disabledOptionSelectTwo(\"PLN\")}\r\n                >\r\n                  PLN\r\n                </option>\r\n                <option\r\n                  value=\"GBP\"\r\n                  disabled={exchangedValues.disabledOptionSelectTwo(\"GBP\")}\r\n                >\r\n                  GPB\r\n                </option>\r\n                <option\r\n                  value=\"EUR\"\r\n                  disabled={exchangedValues.disabledOptionSelectTwo(\"EUR\")}\r\n                >\r\n                  EUR\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </form>\r\n\r\n          <p className=\"mt-4 font-thin text-xs pl-1\">\r\n            source: <a href=\"https://exchangeratesapi.io/\">exchangeratesapi</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full md:w-1/2\">\r\n        <div className=\"mt-5 w-11/12 mx-auto\">\r\n          <Chart data={exchangedValues.processedData} className=\"\" />\r\n        </div>\r\n        <div className=\"grid grid-cols-3 gap-2 w-60 mx-auto text-white\">\r\n          <div className=\"inline\">\r\n            <input\r\n              type=\"button\"\r\n              value=\"week\"\r\n              onClick={exchangedValues.handleStartDate}\r\n              className=\"w-full bg-black\"\r\n            />\r\n          </div>\r\n          <div className=\"inline\">\r\n            <input\r\n              type=\"button\"\r\n              value=\"month\"\r\n              onClick={exchangedValues.handleStartDate}\r\n              className=\"w-full bg-black\"\r\n            />\r\n          </div>\r\n          <div className=\"inline \">\r\n            <input\r\n              type=\"button\"\r\n              value=\"year\"\r\n              onClick={exchangedValues.handleStartDate}\r\n              className=\"w-full bg-black\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"pl-1 pr-10 mt-5 pl-2\">\r\n        <h1 className=\" text-base font-medium underline\">\r\n          Rates history between {exchangedValues.ratesHistoryStartDate} and{\" \"}\r\n          {exchangedValues.ratesHistoryEndDate}:\r\n        </h1>\r\n        {exchangedValues.processedData.map((data) => (\r\n          <p>\r\n            {new Date(data.date).toLocaleDateString(\"en-GB\", {\r\n              day: \"2-digit\",\r\n              month: \"short\",\r\n              year: \"numeric\",\r\n            })}\r\n            : {data.rate.toFixed(4)}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function Logo() {\r\n  return (\r\n    <div className=\" mx-auto py-6 font-bold text-2xl capitalize\">\r\n      <img\r\n        src=\"https://img.icons8.com/wired/64/000000/currency-exchange.png\"\r\n        className=\"mx-auto mb-2\"\r\n      />\r\n      <h1 className=\"text-center\">currency exchange app</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Exchanger from \"./components/Exchanger\";\r\nimport Logo from \"./components/Logo\";\r\nimport \"./index.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto\">\r\n      <Logo />\r\n      <Exchanger />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}