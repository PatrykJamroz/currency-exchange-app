[{"C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\index.tsx":"1","C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\App.tsx":"2","C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\components\\Exchanger.tsx":"3","C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\components\\useExchange.ts":"4","C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\api.ts":"5"},{"size":207,"mtime":1609351381805,"results":"6","hashOfConfig":"7"},{"size":222,"mtime":1608725472945,"results":"8","hashOfConfig":"7"},{"size":2282,"mtime":1609672965881,"results":"9","hashOfConfig":"7"},{"size":1890,"mtime":1609672965882,"results":"10","hashOfConfig":"7"},{"size":415,"mtime":1609431605250,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"db6lt3",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\index.tsx",[],["24","25"],"C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\App.tsx",[],"C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\components\\Exchanger.tsx",["26","27"],"C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\components\\useExchange.ts",["28"],"//custom hook\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { api, Currency } from \"../api\";\r\n\r\nexport function useExchange() {\r\n  const [amount, setAmount] = useState<number | null>(null);\r\n  const [fromCurrency, setFromCurrency] = useState<Currency>(\"EUR\");\r\n  const [toCurrency, setToCurrency] = useState<Currency>(\"USD\");\r\n  const [rate, setRate] = useState(1);\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getRates();\r\n  }, [toCurrency, fromCurrency]);\r\n\r\n  function amountChange(e: React.FormEvent<HTMLInputElement>) {\r\n    setAmount(Number(e.currentTarget.value));\r\n  }\r\n\r\n  function fromChange(e: React.FormEvent<HTMLSelectElement>) {\r\n    setFromCurrency(e.currentTarget.value as Currency);\r\n  }\r\n\r\n  function toChange(e: React.FormEvent<HTMLSelectElement>) {\r\n    setToCurrency(e.currentTarget.value as Currency);\r\n  }\r\n\r\n  async function getRates() {\r\n    const data = await api(fromCurrency, toCurrency);\r\n    setRate(data.rates[toCurrency]);\r\n    setDate(data.date);\r\n  }\r\n\r\n  const exchangedAmount = amount !== null ? amount * rate : null;\r\n  return {\r\n    toChange,\r\n    fromChange,\r\n    amount,\r\n    fromCurrency,\r\n    toCurrency,\r\n    exchangedAmount,\r\n    amountChange,\r\n    date,\r\n  };\r\n}\r\n","C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\api.ts",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":17,"nodeType":"35","messageId":"36","endLine":1,"endColumn":37},{"ruleId":"33","severity":1,"message":"37","line":1,"column":39,"nodeType":"35","messageId":"36","endLine":1,"endColumn":47},{"ruleId":"38","severity":1,"message":"39","line":17,"column":6,"nodeType":"40","endLine":17,"endColumn":32,"suggestions":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"@typescript-eslint/no-unused-vars","'ButtonHTMLAttributes' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRates'. Either include it or remove the dependency array.","ArrayExpression",["44"],"no-global-assign","no-unsafe-negation",{"desc":"45","fix":"46"},"Update the dependencies array to be: [currencyOne, currencyTwo, getRates]",{"range":"47","text":"48"},[608,634],"[currencyOne, currencyTwo, getRates]"]