[{"C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\index.tsx":"1","C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\App.tsx":"2","C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\components\\Exchanger.tsx":"3","C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\components\\useExchange.ts":"4","C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\api.ts":"5"},{"size":207,"mtime":1609351381805,"results":"6","hashOfConfig":"7"},{"size":222,"mtime":1608725472945,"results":"8","hashOfConfig":"7"},{"size":1664,"mtime":1609431944602,"results":"9","hashOfConfig":"7"},{"size":1243,"mtime":1609431851524,"results":"10","hashOfConfig":"7"},{"size":415,"mtime":1609431605250,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"db6lt3",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\index.tsx",[],["26","27"],"C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\App.tsx",[],"C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\components\\Exchanger.tsx",["28","29"],"import React, { ButtonHTMLAttributes, useState } from \"react\";\r\nimport { useExchange } from \"./useExchange\"; //custom hook\r\n\r\nexport default function Exchanger() {\r\n  const echangedValues = useExchange();\r\n  return (\r\n    <div>\r\n      <form>\r\n        <label>\r\n          <input\r\n            name=\"amount\"\r\n            type=\"number\"\r\n            value={echangedValues.amount || undefined}\r\n            onChange={echangedValues.amountChange}\r\n          />\r\n          <select\r\n            value={echangedValues.fromCurrency}\r\n            onChange={echangedValues.fromChange}\r\n          >\r\n            <option value=\"EUR\">EUR</option>\r\n            <option value=\"USD\">USD</option>\r\n            <option value=\"PLN\">PLN</option>\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          <input\r\n            name=\"amount\"\r\n            type=\"number\"\r\n            value={echangedValues.amount || undefined}\r\n            onChange={echangedValues.amountChange}\r\n          />\r\n          <select\r\n            value={echangedValues.toCurrency}\r\n            onChange={echangedValues.toChange}\r\n          >\r\n            <option value=\"USD\">USD</option>\r\n            <option value=\"PLN\">PLN</option>\r\n            <option value=\"EUR\">EUR</option>\r\n          </select>\r\n        </label>\r\n        <br />\r\n      </form>\r\n      <h3>\r\n        {echangedValues.amount} {echangedValues.fromCurrency} ={\" \"}\r\n        {echangedValues.exchangedAmount?.toFixed(4)} {echangedValues.toCurrency}\r\n      </h3>\r\n      <p>date: {echangedValues.date}</p>\r\n      <p>\r\n        source: <a href=\"https://exchangeratesapi.io/\">exchangeratesapi</a>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\components\\useExchange.ts",["30"],"//custom hook\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { api, Currency } from \"../api\";\r\n\r\nexport function useExchange() {\r\n  const [amount, setAmount] = useState<number | null>(null);\r\n  const [fromCurrency, setFromCurrency] = useState<Currency>(\"EUR\");\r\n  const [toCurrency, setToCurrency] = useState<Currency>(\"USD\");\r\n  const [rate, setRate] = useState(1);\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getRates();\r\n  }, [toCurrency, fromCurrency]);\r\n\r\n  function amountChange(e: React.FormEvent<HTMLInputElement>) {\r\n    setAmount(Number(e.currentTarget.value));\r\n  }\r\n\r\n  function fromChange(e: React.FormEvent<HTMLSelectElement>) {\r\n    setFromCurrency(e.currentTarget.value as Currency);\r\n  }\r\n\r\n  function toChange(e: React.FormEvent<HTMLSelectElement>) {\r\n    setToCurrency(e.currentTarget.value as Currency);\r\n  }\r\n\r\n  async function getRates() {\r\n    const data = await api(fromCurrency, toCurrency);\r\n    setRate(data.rates[toCurrency]);\r\n    setDate(data.date);\r\n  }\r\n\r\n  const exchangedAmount = amount !== null ? amount * rate : null;\r\n  return {\r\n    toChange,\r\n    fromChange,\r\n    amount,\r\n    fromCurrency,\r\n    toCurrency,\r\n    exchangedAmount,\r\n    amountChange,\r\n    date,\r\n  };\r\n}\r\n","C:\\Users\\Dell\\webdev\\currency-exchange-app\\src\\api.ts",[],["31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":37},{"ruleId":"37","severity":1,"message":"41","line":1,"column":39,"nodeType":"39","messageId":"40","endLine":1,"endColumn":47},{"ruleId":"42","severity":1,"message":"43","line":15,"column":6,"nodeType":"44","endLine":15,"endColumn":32,"suggestions":"45"},{"ruleId":"33","replacedBy":"46"},{"ruleId":"35","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"@typescript-eslint/no-unused-vars","'ButtonHTMLAttributes' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRates'. Either include it or remove the dependency array.","ArrayExpression",["50"],["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [toCurrency, fromCurrency, getRates]",{"range":"53","text":"54"},[463,489],"[toCurrency, fromCurrency, getRates]"]